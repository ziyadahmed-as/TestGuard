# Generated by Django 5.2.5 on 2025-09-07 11:43

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('analytics', '0001_initial'),
        ('exams', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='assessmenttrend',
            name='exam',
            field=models.ForeignKey(help_text='Exam being tracked for longitudinal analysis', on_delete=django.db.models.deletion.CASCADE, related_name='assessment_trends', to='exams.exam'),
        ),
        migrations.AddField(
            model_name='feedback',
            name='given_by',
            field=models.ForeignKey(help_text='Educator providing the assessment feedback', limit_choices_to={'role': 'INSTR'}, on_delete=django.db.models.deletion.CASCADE, related_name='given_feedback', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='feedback',
            name='response',
            field=models.ForeignKey(help_text='Student response receiving evaluation feedback', on_delete=django.db.models.deletion.CASCADE, related_name='feedbacks', to='exams.questionresponse'),
        ),
        migrations.AddField(
            model_name='gradinganalytics',
            name='exam',
            field=models.ForeignKey(help_text='Exam being analyzed for grading performance metrics', on_delete=django.db.models.deletion.CASCADE, related_name='grading_analytics', to='exams.exam'),
        ),
        migrations.AddField(
            model_name='gradingrubric',
            name='created_by',
            field=models.ForeignKey(help_text='Educator responsible for creating this assessment framework', limit_choices_to={'role': 'INSTR'}, on_delete=django.db.models.deletion.CASCADE, related_name='grading_rubrics', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='manualgradingqueue',
            name='assigned_to',
            field=models.ForeignKey(blank=True, help_text='Educator responsible for this assessment task', limit_choices_to={'role__in': ['INSTR', 'ADMIN']}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_gradings', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='manualgradingqueue',
            name='response',
            field=models.OneToOneField(help_text='Student response awaiting manual evaluation', on_delete=django.db.models.deletion.CASCADE, related_name='grading_queue', to='exams.questionresponse'),
        ),
        migrations.AddField(
            model_name='performanceanalytics',
            name='exam',
            field=models.ForeignKey(help_text='Assessment associated with these performance metrics', on_delete=django.db.models.deletion.CASCADE, related_name='performance_analytics', to='exams.exam'),
        ),
        migrations.AddField(
            model_name='performanceanalytics',
            name='student',
            field=models.ForeignKey(help_text='Student whose academic performance is being analyzed', limit_choices_to={'role': 'STUD'}, on_delete=django.db.models.deletion.CASCADE, related_name='performance_analytics', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='rubricscore',
            name='graded_by',
            field=models.ForeignKey(help_text='Educator responsible for this evaluation', limit_choices_to={'role__in': ['INSTR', 'ADMIN']}, on_delete=django.db.models.deletion.CASCADE, related_name='assigned_scores', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='rubricscore',
            name='response',
            field=models.ForeignKey(help_text='Student response being evaluated against rubric criteria', on_delete=django.db.models.deletion.CASCADE, related_name='rubric_scores', to='exams.questionresponse'),
        ),
        migrations.AddField(
            model_name='rubricscore',
            name='rubric',
            field=models.ForeignKey(help_text='Grading framework applied for this assessment', on_delete=django.db.models.deletion.CASCADE, related_name='scores', to='analytics.gradingrubric'),
        ),
        migrations.AddField(
            model_name='feedback',
            name='rubric_score',
            field=models.OneToOneField(blank=True, help_text='Associated quantitative scoring record', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='feedback', to='analytics.rubricscore'),
        ),
        migrations.AddIndex(
            model_name='assessmenttrend',
            index=models.Index(fields=['exam', 'period_end'], name='analytics_a_exam_id_104ba8_idx'),
        ),
        migrations.AddIndex(
            model_name='assessmenttrend',
            index=models.Index(fields=['average_score'], name='analytics_a_average_18603c_idx'),
        ),
        migrations.AddIndex(
            model_name='assessmenttrend',
            index=models.Index(fields=['pass_rate'], name='analytics_a_pass_ra_2774a8_idx'),
        ),
        migrations.AddIndex(
            model_name='gradinganalytics',
            index=models.Index(fields=['exam', 'generated_at'], name='analytics_g_exam_id_e13fd3_idx'),
        ),
        migrations.AddIndex(
            model_name='gradinganalytics',
            index=models.Index(fields=['total_manual_questions'], name='analytics_g_total_m_0d0ef8_idx'),
        ),
        migrations.AddIndex(
            model_name='gradinganalytics',
            index=models.Index(fields=['graded_questions'], name='analytics_g_graded__e300f1_idx'),
        ),
        migrations.AddIndex(
            model_name='gradingrubric',
            index=models.Index(fields=['created_by'], name='analytics_g_created_c66dc4_idx'),
        ),
        migrations.AddIndex(
            model_name='gradingrubric',
            index=models.Index(fields=['created_at'], name='analytics_g_created_784087_idx'),
        ),
        migrations.AddIndex(
            model_name='gradingrubric',
            index=models.Index(fields=['max_score'], name='analytics_g_max_sco_a51856_idx'),
        ),
        migrations.AddIndex(
            model_name='manualgradingqueue',
            index=models.Index(fields=['status', 'assigned_to'], name='analytics_m_status_a6b19d_idx'),
        ),
        migrations.AddIndex(
            model_name='manualgradingqueue',
            index=models.Index(fields=['priority'], name='analytics_m_priorit_f52571_idx'),
        ),
        migrations.AddIndex(
            model_name='manualgradingqueue',
            index=models.Index(fields=['created_at'], name='analytics_m_created_9de1a3_idx'),
        ),
        migrations.AddIndex(
            model_name='manualgradingqueue',
            index=models.Index(fields=['started_at'], name='analytics_m_started_1f0831_idx'),
        ),
        migrations.AddIndex(
            model_name='performanceanalytics',
            index=models.Index(fields=['student', 'exam'], name='analytics_p_student_e5c0a9_idx'),
        ),
        migrations.AddIndex(
            model_name='performanceanalytics',
            index=models.Index(fields=['generated_at'], name='analytics_p_generat_c5eb8d_idx'),
        ),
        migrations.AddIndex(
            model_name='performanceanalytics',
            index=models.Index(fields=['overall_score'], name='analytics_p_overall_7b65a9_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='performanceanalytics',
            unique_together={('student', 'exam')},
        ),
        migrations.AddIndex(
            model_name='rubricscore',
            index=models.Index(fields=['response', 'rubric'], name='analytics_r_respons_4b4e7f_idx'),
        ),
        migrations.AddIndex(
            model_name='rubricscore',
            index=models.Index(fields=['graded_by'], name='analytics_r_graded__f76c19_idx'),
        ),
        migrations.AddIndex(
            model_name='rubricscore',
            index=models.Index(fields=['graded_at'], name='analytics_r_graded__b0e56b_idx'),
        ),
        migrations.AddIndex(
            model_name='rubricscore',
            index=models.Index(fields=['total_score'], name='analytics_r_total_s_1a9ae0_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='rubricscore',
            unique_together={('response', 'rubric')},
        ),
        migrations.AddIndex(
            model_name='feedback',
            index=models.Index(fields=['response'], name='analytics_f_respons_fe661b_idx'),
        ),
        migrations.AddIndex(
            model_name='feedback',
            index=models.Index(fields=['rubric_score'], name='analytics_f_rubric__9ffd97_idx'),
        ),
        migrations.AddIndex(
            model_name='feedback',
            index=models.Index(fields=['given_by'], name='analytics_f_given_b_c02f5f_idx'),
        ),
        migrations.AddIndex(
            model_name='feedback',
            index=models.Index(fields=['created_at'], name='analytics_f_created_63ac19_idx'),
        ),
    ]
